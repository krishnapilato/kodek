name: Deploy Backend and Frontend

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'backend/java/**'
      - 'frontend/angular/**'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'backend/java/**'
      - 'frontend/angular/**'

# Reusable environment variables
env:
  AWS_REGION: eu-west-1
  S3_BUCKET_BACKEND: PortfolioBackendAPISpringBoot-env
  S3_BUCKET_FRONTEND: my-portfolio-frontend-khovakrishna

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Cache Maven dependencies to speed up subsequent builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 3: Set up JDK 21 for the build
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 4: Build the application using Maven (skipping tests)
      - name: Build with Maven
        run: cd backend/java/ && mvn package -DskipTests -q -B

      # Step 5: Deploy to Heroku
      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku auth:token
          heroku git:remote -a ${{ secrets.HEROKU_APP_NAME }}
          git push heroku dev:main  # Push dev branch to heroku main branch
          
  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: frontend/angular/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/angular/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23.1.0'

      - name: Install Angular CLI
        run: npm install -g @angular/cli@latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Dependencies
        run: |
          cd frontend/angular/ 
          npm ci --force

      - name: Build Angular App
        run: |
          cd frontend/angular/
          ng build --configuration production

      - name: Deploy to S3 with Cache-Control
        run: |
          aws s3 sync frontend/angular/dist/frontend/browser s3://${{ env.S3_BUCKET_FRONTEND }} --delete \
            --cache-control "public, max-age=31536000, immutable"
